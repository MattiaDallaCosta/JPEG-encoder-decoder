[1/10] Performing build step for 'bootloader'
[1/1] cd /home/mattia/esp/blink/build/bootloader/esp-idf/esptool_py && /home/mattia/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/mattia/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/mattia/esp/blink/build/bootloader/bootloader.bin
Bootloader binary size 0x6720 bytes. 0x8e0 bytes (8%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink.c.obj
In file included from /home/mattia/esp/blink/main/blink.c:11:
/home/mattia/esp/blink/main/../include/define.h:8: warning: "MAX" redefined
    8 | #define MAX(a,b)  (((a)>(b))?(a):(b))
      | 
In file included from /home/mattia/esp/blink/main/blink.c:4:
/home/mattia/.espressif/tools/xtensa-esp32-elf/esp-2022r1-11.2.0/xtensa-esp32-elf/xtensa-esp32-elf/sys-include/sys/param.h:28: note: this is the location of the previous definition
   28 | #define MAX(a,b) ((a) > (b) ? (a) : (b))
      | 
In file included from /home/mattia/esp/blink/main/blink.c:11:
/home/mattia/esp/blink/main/../include/define.h:9: warning: "MIN" redefined
    9 | #define MIN(a,b)  (((a)<(b))?(a):(b))
      | 
In file included from /home/mattia/esp/blink/main/blink.c:4:
/home/mattia/.espressif/tools/xtensa-esp32-elf/esp-2022r1-11.2.0/xtensa-esp32-elf/xtensa-esp32-elf/sys-include/sys/param.h:29: note: this is the location of the previous definition
   29 | #define MIN(a,b) ((a) < (b) ? (a) : (b))
      | 
[4/10] Linking C static library esp-idf/main/libmain.a
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable blink.elf
[8/10] Generating binary image from built executable
esptool.py v4.5.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/mattia/esp/blink/build/blink.bin
[9/10] cd /home/mattia/esp/blink/build/esp-idf/esptool_py && /home/mattia/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/mattia/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/mattia/esp/blink/build/partition_table/partition-table.bin /home/mattia/esp/blink/build/blink.bin
blink.bin binary size 0x422f0 bytes. Smallest app partition is 0x100000 bytes. 0xbdd10 bytes (74%) free.
[9/10] cd /home/mattia/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/mattia/esp/esp-idf -D "SERIAL_TOOL=/home/mattia/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/home/mattia/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/mattia/esp/blink/build -P /home/mattia/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB1 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 blink.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.dev2
Serial port /dev/ttyUSB1
Connecting.....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 54:43:b2:a9:60:0c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00052fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26400 bytes to 16475...
Writing at 0x00001000... (50 %)
Writing at 0x000076a8... (100 %)
Wrote 26400 bytes (16475 compressed) at 0x00001000 in 0.7 seconds (effective 287.0 kbit/s)...
Hash of data verified.
Compressed 271088 bytes to 145474...
Writing at 0x00010000... (11 %)
Writing at 0x0001aa68... (22 %)
Writing at 0x000233de... (33 %)
Writing at 0x00028ed9... (44 %)
Writing at 0x000306c8... (55 %)
Writing at 0x00036135... (66 %)
Writing at 0x0003fbe2... (77 %)
Writing at 0x00047571... (88 %)
Writing at 0x0004ceed... (100 %)
Wrote 271088 bytes (145474 compressed) at 0x00010000 in 3.4 seconds (effective 630.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 516.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
